window.addEventListener("load",function(){const urlParams=new URLSearchParams(window.location.search);const grid=urlParams.get('grid');window.gridsize=Number(grid)||4
let canvas=document.getElementById("canvas")
reseed()
new ACID(canvas)})
let clock=0
const flooring=0
function reseed(){clock=0
window.config={"typ":"mod","settings":{"defaultColor":"#ffffff","defaultFx":"drv","framerate":30,"zoom":0.2972972972972973,"tips":"off","labels":"on","buttons":"on","transparency":0.5495495495495496,"showDimensions":"on"},"render":{"resolution":(Math.min(1,(((window.innerWidth+window.innerHeight)*0.5)/2000))*0.9+0.1)*0.14,"w":0,"h":0,"x":0.01001001001001001,"y":0.01001001001001001,"a":1,"mod":"rgb","clrs":[],"optimization":{"effects":"off","subpixels":"off","feedback":"off","colormodes":"off","txt":"off"},"feedback":{"quantization":Math.random(),"intensity":Math.random(),"mix":Math.random(),"bend":Math.random(),"skew":Math.random(),"centerY":Math.random(),"centerX":Math.random(),"step":Math.random(),"darken":0},"channels":{"r":{"amp":1,"base":flooring,"mod":1-flooring,"active":true},"g":{"amp":1,"base":flooring,"mod":1-flooring,"active":true},"b":{"amp":1,"base":flooring,"mod":1-flooring,"active":true},"a":{"amp":1,"base":0,"mod":1,"active":true}}},"osc":[{"typ":"osc","min":0.5*Math.random(),"max":0.5+Math.random()*0.5,"mix":"add","run":true,"fx":{"c":["exp","rnd","bit"],"bit":Math.random(),"cmp":Math.random(),"exp":Math.random(),"rnd":Math.random(),"drv":Math.random()},"filter":{"lpf":0.8*Math.random(),"hpf":0.8*Math.random()},"config":{"x":{"frq":Math.random()*0.1,"off":Math.random()},"y":{"frq":Math.random()*0.1,"off":Math.random()},"z":{"frq":Math.random()*0.1,"off":0,"len":Math.random()*0.4,"mod":Math.random(),"cen":Math.random(),"shp":Math.random()}},"channels":{"r":Math.random(),"g":Math.random(),"b":Math.random(),"a":1}},{"typ":"prl","min":0.5*Math.random(),"max":0.5+Math.random()*0.5,"mix":"add","run":true,"fx":{"c":["exp","drv"],"bit":Math.random(),"cmp":Math.random(),"exp":Math.random(),"rnd":Math.random(),"drv":Math.random()},"filter":{"lpf":0.8*Math.random(),"hpf":0.8*Math.random()},"config":{"x":{"frq":Math.random()*0.1,"off":Math.random()},"y":{"frq":Math.random()*0.1,"off":Math.random()},"z":{"frq":Math.random()*0.1,"off":0,"len":Math.random()*0.4,"mod":Math.random(),"cen":Math.random(),"shp":Math.random()}},"channels":{"r":Math.random(),"g":Math.random(),"b":Math.random(),"a":1}},{"typ":"osc","min":0.5*Math.random(),"max":0.5+Math.random()*0.5,"mix":"add","run":true,"fx":{"c":["cmp"],"bit":Math.random(),"cmp":Math.random(),"exp":Math.random(),"rnd":Math.random(),"drv":Math.random()},"filter":{"lpf":0.8*Math.random(),"hpf":0.8*Math.random()},"config":{"x":{"frq":Math.random()*0.1,"off":Math.random()},"y":{"frq":Math.random()*0.1,"off":Math.random()},"z":{"frq":Math.random()*0.1,"off":0,"len":Math.random()*0.4,"mod":Math.random(),"cen":Math.random(),"shp":Math.random()}},"channels":{"r":Math.random(),"g":Math.random(),"b":Math.random(),"a":1}},{"typ":"plx","min":0.5*Math.random(),"max":0.5+Math.random()*0.5,"mix":"add","run":true,"fx":{"c":["exp","rnd"],"bit":Math.random(),"cmp":Math.random(),"exp":Math.random(),"rnd":Math.random(),"drv":Math.random()},"filter":{"lpf":0.8*Math.random(),"hpf":0.8*Math.random()},"config":{"x":{"frq":Math.random()*0.1,"off":Math.random()},"y":{"frq":Math.random()*0.1,"off":Math.random()},"z":{"frq":Math.random()*0.1,"off":0,"len":Math.random()*0.4,"mod":Math.random(),"cen":Math.random(),"shp":Math.random()}},"channels":{"r":Math.random(),"g":Math.random(),"b":Math.random(),"a":1}},{"typ":"osc","min":0.5*Math.random(),"max":0.5+Math.random()*0.5,"mix":"add","run":true,"fx":{"c":[],"bit":Math.random(),"cmp":Math.random(),"exp":Math.random(),"rnd":Math.random(),"drv":Math.random()},"filter":{"lpf":0.8*Math.random(),"hpf":0.8*Math.random()},"config":{"x":{"frq":Math.random()*0.1,"off":Math.random()},"y":{"frq":Math.random()*0.1,"off":Math.random()},"z":{"frq":Math.random()*0.1,"off":0,"len":Math.random()*0.4,"mod":Math.random(),"cen":Math.random(),"shp":Math.random()}},"channels":{"r":Math.random(),"g":Math.random(),"b":Math.random(),"a":1}}]}}
function ACID(canvas){this.seed=0
this.canvas=canvas
this.initiated=false
this.t=0
this.dynamics={t:0,d:0}
this.reseed=function(){this.wavetables.random
for(let i=0;i<100;i++){let r=Math.round(Math.random()*1000)/1000
this.wavetables.random.push(r)}
this.seed=Math.random()*1000
noise.seed(Math.random()*1000)}
this.createRender=function(){new ACIDRENDER(this.canvas,this)}
this.wavetables={rotation:[[0,1],[0.011,0.989],[0.022,0.978],[0.033,0.967],[0.044,0.956],[0.056,0.944],[0.067,0.933],[0.078,0.922],[0.089,0.911],[0.1,0.9],[0.111,0.889],[0.122,0.878],[0.133,0.867],[0.144,0.856],[0.156,0.844],[0.167,0.833],[0.178,0.822],[0.189,0.811],[0.2,0.8],[0.211,0.789],[0.222,0.778],[0.233,0.767],[0.244,0.756],[0.256,0.744],[0.267,0.733],[0.278,0.722],[0.289,0.711],[0.3,0.7],[0.311,0.689],[0.322,0.678],[0.333,0.667],[0.344,0.656],[0.356,0.644],[0.367,0.633],[0.378,0.622],[0.389,0.611],[0.4,0.6],[0.411,0.589],[0.422,0.578],[0.433,0.567],[0.444,0.556],[0.456,0.544],[0.467,0.533],[0.478,0.522],[0.489,0.511],[0.5,0.5],[0.511,0.489],[0.522,0.478],[0.533,0.467],[0.544,0.456],[0.556,0.444],[0.567,0.433],[0.578,0.422],[0.589,0.411],[0.6,0.4],[0.611,0.389],[0.622,0.378],[0.633,0.367],[0.644,0.356],[0.656,0.344],[0.667,0.333],[0.678,0.322],[0.689,0.311],[0.7,0.3],[0.711,0.289],[0.722,0.278],[0.733,0.267],[0.744,0.256],[0.756,0.244],[0.767,0.233],[0.778,0.222],[0.789,0.211],[0.8,0.2],[0.811,0.189],[0.822,0.178],[0.833,0.167],[0.844,0.156],[0.856,0.144],[0.867,0.133],[0.878,0.122],[0.889,0.111],[0.9,0.1],[0.911,0.089],[0.922,0.078],[0.933,0.067],[0.944,0.056],[0.956,0.044],[0.967,0.033],[0.978,0.022],[0.989,0.011],[1,0],[0.989,-0.011],[0.978,-0.022],[0.967,-0.033],[0.956,-0.044],[0.944,-0.056],[0.933,-0.067],[0.922,-0.078],[0.911,-0.089],[0.9,-0.1],[0.889,-0.111],[0.878,-0.122],[0.867,-0.133],[0.856,-0.144],[0.844,-0.156],[0.833,-0.167],[0.822,-0.178],[0.811,-0.189],[0.8,-0.2],[0.789,-0.211],[0.778,-0.222],[0.767,-0.233],[0.756,-0.244],[0.744,-0.256],[0.733,-0.267],[0.722,-0.278],[0.711,-0.289],[0.7,-0.3],[0.689,-0.311],[0.678,-0.322],[0.667,-0.333],[0.656,-0.344],[0.644,-0.356],[0.633,-0.367],[0.622,-0.378],[0.611,-0.389],[0.6,-0.4],[0.589,-0.411],[0.578,-0.422],[0.567,-0.433],[0.556,-0.444],[0.544,-0.456],[0.533,-0.467],[0.522,-0.478],[0.511,-0.489],[0.5,-0.5],[0.489,-0.511],[0.478,-0.522],[0.467,-0.533],[0.456,-0.544],[0.444,-0.556],[0.433,-0.567],[0.422,-0.578],[0.411,-0.589],[0.4,-0.6],[0.389,-0.611],[0.378,-0.622],[0.367,-0.633],[0.356,-0.644],[0.344,-0.656],[0.333,-0.667],[0.322,-0.678],[0.311,-0.689],[0.3,-0.7],[0.289,-0.711],[0.278,-0.722],[0.267,-0.733],[0.256,-0.744],[0.244,-0.756],[0.233,-0.767],[0.222,-0.778],[0.211,-0.789],[0.2,-0.8],[0.189,-0.811],[0.178,-0.822],[0.167,-0.833],[0.156,-0.844],[0.144,-0.856],[0.133,-0.867],[0.122,-0.878],[0.111,-0.889],[0.1,-0.9],[0.089,-0.911],[0.078,-0.922],[0.067,-0.933],[0.056,-0.944],[0.044,-0.956],[0.033,-0.967],[0.022,-0.978],[0.011,-0.989],[0,-1],[-0.011,-0.989],[-0.022,-0.978],[-0.033,-0.967],[-0.044,-0.956],[-0.056,-0.944],[-0.067,-0.933],[-0.078,-0.922],[-0.089,-0.911],[-0.1,-0.9],[-0.111,-0.889],[-0.122,-0.878],[-0.133,-0.867],[-0.144,-0.856],[-0.156,-0.844],[-0.167,-0.833],[-0.178,-0.822],[-0.189,-0.811],[-0.2,-0.8],[-0.211,-0.789],[-0.222,-0.778],[-0.233,-0.767],[-0.244,-0.756],[-0.256,-0.744],[-0.267,-0.733],[-0.278,-0.722],[-0.289,-0.711],[-0.3,-0.7],[-0.311,-0.689],[-0.322,-0.678],[-0.333,-0.667],[-0.344,-0.656],[-0.356,-0.644],[-0.367,-0.633],[-0.378,-0.622],[-0.389,-0.611],[-0.4,-0.6],[-0.411,-0.589],[-0.422,-0.578],[-0.433,-0.567],[-0.444,-0.556],[-0.456,-0.544],[-0.467,-0.533],[-0.478,-0.522],[-0.489,-0.511],[-0.5,-0.5],[-0.511,-0.489],[-0.522,-0.478],[-0.533,-0.467],[-0.544,-0.456],[-0.556,-0.444],[-0.567,-0.433],[-0.578,-0.422],[-0.589,-0.411],[-0.6,-0.4],[-0.611,-0.389],[-0.622,-0.378],[-0.633,-0.367],[-0.644,-0.356],[-0.656,-0.344],[-0.667,-0.333],[-0.678,-0.322],[-0.689,-0.311],[-0.7,-0.3],[-0.711,-0.289],[-0.722,-0.278],[-0.733,-0.267],[-0.744,-0.256],[-0.756,-0.244],[-0.767,-0.233],[-0.778,-0.222],[-0.789,-0.211],[-0.8,-0.2],[-0.811,-0.189],[-0.822,-0.178],[-0.833,-0.167],[-0.844,-0.156],[-0.856,-0.144],[-0.867,-0.133],[-0.878,-0.122],[-0.889,-0.111],[-0.9,-0.1],[-0.911,-0.089],[-0.922,-0.078],[-0.933,-0.067],[-0.944,-0.056],[-0.956,-0.044],[-0.967,-0.033],[-0.978,-0.022],[-0.989,-0.011],[-1,0],[-0.989,0.011],[-0.978,0.022],[-0.967,0.033],[-0.956,0.044],[-0.944,0.056],[-0.933,0.067],[-0.922,0.078],[-0.911,0.089],[-0.9,0.1],[-0.889,0.111],[-0.878,0.122],[-0.867,0.133],[-0.856,0.144],[-0.844,0.156],[-0.833,0.167],[-0.822,0.178],[-0.811,0.189],[-0.8,0.2],[-0.789,0.211],[-0.778,0.222],[-0.767,0.233],[-0.756,0.244],[-0.744,0.256],[-0.733,0.267],[-0.722,0.278],[-0.711,0.289],[-0.7,0.3],[-0.689,0.311],[-0.678,0.322],[-0.667,0.333],[-0.656,0.344],[-0.644,0.356],[-0.633,0.367],[-0.622,0.378],[-0.611,0.389],[-0.6,0.4],[-0.589,0.411],[-0.578,0.422],[-0.567,0.433],[-0.556,0.444],[-0.544,0.456],[-0.533,0.467],[-0.522,0.478],[-0.511,0.489],[-0.5,0.5],[-0.489,0.511],[-0.478,0.522],[-0.467,0.533],[-0.456,0.544],[-0.444,0.556],[-0.433,0.567],[-0.422,0.578],[-0.411,0.589],[-0.4,0.6],[-0.389,0.611],[-0.378,0.622],[-0.367,0.633],[-0.356,0.644],[-0.344,0.656],[-0.333,0.667],[-0.322,0.678],[-0.311,0.689],[-0.3,0.7],[-0.289,0.711],[-0.278,0.722],[-0.267,0.733],[-0.256,0.744],[-0.244,0.756],[-0.233,0.767],[-0.222,0.778],[-0.211,0.789],[-0.2,0.8],[-0.189,0.811],[-0.178,0.822],[-0.167,0.833],[-0.156,0.844],[-0.144,0.856],[-0.133,0.867],[-0.122,0.878],[-0.111,0.889],[-0.1,0.9],[-0.089,0.911],[-0.078,0.922],[-0.067,0.933],[-0.056,0.944],[-0.044,0.956],[-0.033,0.967],[-0.022,0.978],[0,1]],random:[0.834,0.924,0.075,0.335,0.517,0.13,0.101,0.646,0.389,0.947,0.385,0.353,0.512,0.494,0.946,0.999,0.621,0.341,0.049,0.05,0.279,0.315,0.465,0.405,0.019,0.669,0.545,0.752,0.793,0.23,0.814,0.348,0.979,0.277,0.404,0.215,0.073,0.065,0.026,0.039,0.579,0.382,0.864,0.92,0.139,0.712,0.506,0.29,0.805,0.4,0.775,0.901,0.563,0.764,0.813,0.558,0.744,0.871,0.225,0.273,0.988,0.357,0.141,0.145,0.008,0.271,0.137,0.325,0.342,0.847,0.455,0.837,0.247,0.565,0.461,0.034,0.54,0.161,0.341,0.156,0.565,0.004,0.286,0.105,0.418,0.713,0.615,0.229,0.143,0.205,0.64,0.948,0.292,0.433,0.047,0.062,0.704,0.342,0.147,0.935],}
this.get=function(x,y,z,t){let _x=x
let _y=y
let n=[0,0,0,0]
let _n=0
var i=0
while(i<5){if(i>3){x=_x
y=_y}
let osc=config.osc[i]
if(osc.run&&osc.type!="off"){switch(osc.typ){case "org":_n=(noise.simplex3(((x+(t*(0.4994994994994995-osc.config.x.off)*1000))*osc.config.x.frq*0.1),((y+(t*(0.4994994994994995-osc.config.y.off)*1000))*osc.config.y.frq*0.1),((z+(t*(0.4994994994994995-osc.config.z.off)*100))*osc.config.z.frq*0.01))+1)*0.5
let r=_n*(1-osc.config.z.shp)+(_n+this.wavetables.random[Math.round(_n*osc.config.z.cen*99)])*osc.config.z.shp
_n=r<0?0:r>1?1:r
break
case "prl":_n=(noise.perlin3(((x+(t*(0.4994994994994995-osc.config.x.off)*1000))*osc.config.x.frq*0.05),((y+(t*(0.4994994994994995-osc.config.y.off)*1000))*osc.config.y.frq*0.05),((z+(t*(0.4994994994994995-osc.config.z.off)*100))*osc.config.z.frq*0.01))+1)*0.5
break
case "plx":_n=(noise.simplex3(((x+(t*(0.4994994994994995-osc.config.x.off)*1000))*osc.config.x.frq*0.05),((y+(t*(0.4994994994994995-osc.config.y.off)*1000))*osc.config.y.frq*0.05),((z+(t*(0.4994994994994995-osc.config.z.off)*100))*osc.config.z.frq*0.01))+1)*0.5
break
default:let v=((this.wavetables.rotation[Math.round((1-osc.config.z.mod)*359)][0]*x+
this.wavetables.rotation[Math.round((1-osc.config.z.mod)*359)][1]*y)*osc.config.z.frq*0.1+
(t*osc.config.z.len*1)+
osc.config.z.off)%1
switch(osc.typ){case "saw":_n=v
break
case "rmp":_n=1-v
break
case "sqr":_n=v<0.5?1:0
break
case "pwm":_n=v<osc.config.z.cen?1:0
break
case "tri":_n=v<0.5?v*2:1-((v-0.5)*2)
break
case "sin":let tri=v<0.5?v*2:1-((v-0.5)*2)
_n=(1+Math.sin((1.5+tri)*Math.PI))*0.5
break
case "osc":let center=osc.config.z.cen
let shape=osc.config.z.shp
let t
if((v%1)<center){t=(v%1)*1/center}
else{t=1-(((v%1)-center)*(1/(1-center)))}
let sin=((1+Math.sin((1.5+t)*Math.PI))*0.5)
let sqr=t<center?0:1
if(shape<=0.5){_n=t*((0.5-shape)*2)+sin*(shape*2)}
else{_n=sin*(2-shape*2)+sqr*((shape-0.5)*2)}
break}}
_n=(osc.min+((osc.max-osc.min)*_n))
if(_n>=(osc.filter.hpf*(osc.max-osc.min))+osc.min&&_n<=osc.min+(1-osc.filter.lpf)*(osc.max-osc.min)){switch(osc.mix){case "add":n[0]+=_n*osc.channels.r
n[1]+=_n*osc.channels.g
n[2]+=_n*osc.channels.b
n[3]+=_n*osc.channels.a
break
case "sub":n[0]-=_n*osc.channels.r
n[1]-=_n*osc.channels.g
n[2]-=_n*osc.channels.b
n[3]-=_n*osc.channels.a
break
case "mlt":n[0]*=_n*osc.channels.r
n[1]*=_n*osc.channels.g
n[2]*=_n*osc.channels.b
n[3]*=_n*osc.channels.a
break
case "div":n[0]/=_n*osc.channels.r
n[1]/=_n*osc.channels.g
n[2]/=_n*osc.channels.b
n[3]/=_n*osc.channels.a
break}}}
i++}
let max=0.9
switch(config.typ){case "clp":n[0]=Math.max(0,Math.min(1,n[0]))
n[1]=Math.max(0,Math.min(1,n[1]))
n[2]=Math.max(0,Math.min(1,n[2]))
n[3]=Math.max(0,Math.min(1,n[3]))
break
case "mod":n[0]=n[0]>max?n[0]%max:n[0]
n[1]=n[1]>max?n[1]%max:n[1]
n[2]=n[2]>max?n[2]%max:n[2]
n[3]=n[3]>max?n[3]%max:n[3]
break
case "dyn":if(t!=this.dynamics.t){this.dynamics.t=t
this.dynamics.d=0}
if(n[0]>this.dynamics.d){this.dynamics.d=n[0]}
if(n[1]>this.dynamics.d){this.dynamics.d=n[1]}
if(n[2]>this.dynamics.d){this.dynamics.d=n[2]}
if(n[3]>this.dynamics.d){this.dynamics.d=n[3]}
n[0]=n[0]/this.dynamics.d
n[1]=n[1]/this.dynamics.d
n[2]=n[2]/this.dynamics.d
n[3]=n[3]/this.dynamics.d
break}
return n}
this.init=function(){this.createRender()
this.reseed()}
this.init()}
function ACIDRENDER(canvas,mothership){this.canvas=canvas
this.gl=this.canvas.getContext('webgl',{preserveDrawingBuffer:false});this.mothership=mothership
this.count=1000
this.upCount=function(){this.count+=0.1/config.settings.framerate
clock++
if(this.count>2147483646){this.count=1000}}
this.initiated=false
this.running=true
this.stopped=false
this.scrollContainer=false
this.dimensions={width:0,height:0}
this.resize=function(){this.dimensions.width=window.innerWidth
this.dimensions.height=window.innerHeight
this.canvas.width=this.dimensions.width
this.canvas.height=this.dimensions.height
this.gl.viewport(0,0,this.canvas.width,this.canvas.height);}
this.render=function(){let whitepixels=0
let totalpixels=0
if(!this.stopped){setTimeout(function(){requestAnimationFrame(function(){this.render()}.bind(this))}.bind(this),60000/(config.settings.framerate*60));}
gl=this.gl
let colors=[]
let vertices=[]
let base=0.8
var verticeN=0
let d=(this.dimensions.width+this.dimensions.height)*0.5
let res=2+config.render.resolution*24
gl.uniform1f(this.resolutionLocation,res+0.1);let subpixels=config.render.optimization.subpixels=="on"
let feedback=config.render.optimization.feedback=="on"
let colormodes=config.render.optimization.colormodes=="on"
let timeshiftQuantization=config.render.feedback.quantization!=0
let grayscale=config.render.a
var y=0
var x=0
var _y=0
var _x=0
var time=this.scrollContainer?this.count+(this.scrollContainer.scrollTop/window.innerHeight)*2:this.count
var r,g,b,a,rgb,bw,_bw,timeshift,relX,relY,rel,centeredRelX,centeredRelX,n,m,isEdge,lShift,sShift,darken,q
while(y<this.dimensions.height){while(x<this.dimensions.width){relX=x/this.dimensions.width
relY=y/this.dimensions.height
if(feedback){centeredRelX=relX<=config.render.feedback.centerX?relX/config.render.feedback.centerX:1-((relX-config.render.feedback.centerX)/(1-config.render.feedback.centerX))
centeredRelY=relY<=(1-config.render.feedback.centerY)?relY/(1-config.render.feedback.centerY):1-((relY-(1-config.render.feedback.centerY))/config.render.feedback.centerY)
n=centeredRelX*config.render.feedback.skew+centeredRelY*(1-config.render.feedback.skew)
m=n*config.render.feedback.bend+config.render.feedback.mix*(1-config.render.feedback.bend)
lShift=centeredRelX*m+centeredRelY*(1-m)
sShift=Math.min(centeredRelX*m*2,centeredRelY*(1-m)*2)
timeshift=sShift*config.render.feedback.step+lShift*(1-config.render.feedback.step)
if(timeshiftQuantization){q=config.render.feedback.quantization*config.render.feedback.quantization
timeshift=Math.round(timeshift*(1/q))*q}
timeshift=1-timeshift
darken=(timeshift*config.render.feedback.darken+(1-config.render.feedback.darken))*0.99+0.01
rgb=this.mothership.get(x,y,0,time+timeshift*config.render.feedback.intensity*100)
r=config.render.channels.r.active?((config.render.channels.r.base+rgb[0]*config.render.channels.r.mod)*config.render.channels.r.amp)*darken:0
g=config.render.channels.g.active?((config.render.channels.g.base+rgb[1]*config.render.channels.g.mod)*config.render.channels.g.amp)*darken:0
b=config.render.channels.b.active?((config.render.channels.b.base+rgb[2]*config.render.channels.b.mod)*config.render.channels.b.amp)*darken:0
a=config.render.channels.a.active?((config.render.channels.a.base+rgb[3]*config.render.channels.a.mod)*config.render.channels.a.amp)*darken:0}
else{rgb=this.mothership.get(x,y,0,time)
r=config.render.channels.r.active?((config.render.channels.r.base+rgb[0]*config.render.channels.r.mod)*config.render.channels.r.amp):0
g=config.render.channels.g.active?((config.render.channels.g.base+rgb[1]*config.render.channels.g.mod)*config.render.channels.g.amp):0
b=config.render.channels.b.active?((config.render.channels.b.base+rgb[2]*config.render.channels.b.mod)*config.render.channels.b.amp):0
a=config.render.channels.a.active?((config.render.channels.a.base+rgb[3]*config.render.channels.a.mod)*config.render.channels.a.amp):0}
rel=base+(1-relX)*(1-base)
_bw=(0.2126*r+0.7152*g+0.0722*b)
bw=_bw>0.5?1:0
if(bw==1){whitepixels++}
totalpixels++
_bw=_bw*rel
let v=Math.round(_x)%gridsize==0&&Math.round(_y+1)%gridsize==0
bw=bw&&v
if(config.render.mod!="rgb"&&colormodes){switch(config.render.mod){case "ndx":let c=config.render.clrs[Math.min(Math.floor(config.render.clrs.length*bw),(config.render.clrs.length-1))]||{r:0,g:0,b:0}
r=c.r
g=c.g
b=c.b
break
case "grd":let start=config.render.clrs[Math.min(Math.floor(config.render.clrs.length*bw),(config.render.clrs.length-1))]||{r:0,g:0,b:0}
let end=config.render.clrs[Math.min(Math.ceil(config.render.clrs.length*bw),(config.render.clrs.length-1))]||{r:1,g:1,b:1}
let colorMix=(bw*config.render.clrs.length)%1
r=start.r*(1-colorMix)+end.r*colorMix
g=start.g*(1-colorMix)+end.g*colorMix
b=start.b*(1-colorMix)+end.b*colorMix
break}}
if(subpixels){colors.push(r*(1-grayscale)+bw*grayscale,0,0,0,g*(1-grayscale)+bw*grayscale,0,0,0,b*(1-grayscale)+bw*grayscale)
vertices.push((x/this.dimensions.width*2)-1,-((y/this.dimensions.height*2)-1),(x/this.dimensions.width*2)-1,-(((y+0.33333333*res)/this.dimensions.height*2)-1),(x/this.dimensions.width*2)-1,-(((y+0.66666666*res)/this.dimensions.height*2)-1))
verticeN+=3}
else{colors.push(r*(1-grayscale)+bw*grayscale,g*(1-grayscale)+bw*grayscale,b*(1-grayscale)+bw*grayscale)
vertices.push(((x/this.dimensions.width*2)-1),-((y/this.dimensions.height*2)-1),)
verticeN+=1}
x+=res
_x++}
x=0
_x=0
y+=res
_y++}
let colorBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,colorBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(colors),gl.STATIC_DRAW);let aColor=gl.getAttribLocation(this.shaderProgram,'aColor');gl.vertexAttribPointer(aColor,3,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(aColor);let vertex_buffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,vertex_buffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(vertices),gl.STATIC_DRAW);let coord=gl.getAttribLocation(this.shaderProgram,"coord");gl.vertexAttribPointer(coord,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(coord);gl.clear(gl.COLOR_BUFFER_BIT);gl.drawArrays(gl.POINTS,0,verticeN)
this.upCount()
let filled=whitepixels/totalpixels
let fillTreshold=0.2-clock*0.001
if(filled<0.05||filled>fillTreshold){reseed()}}
this.init=function(){this.scrollContainer=document.getElementById("container")
let gl=this.gl
gl.clearColor(0,0,0,1);let vertCode='attribute vec4 coord;'+
'attribute vec4 aColor;'+
'varying vec4 vColor;'+
'uniform float resolution;'+
'void main(void) {'+
'gl_Position = coord;'+
'gl_PointSize = resolution;'+
'vColor = aColor;'+
'}'
let vertShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vertShader,vertCode);gl.compileShader(vertShader);let fragCode='precision mediump float;'+
'varying vec4 vColor;'+
'void main() {'+
'gl_FragColor = vColor;'+
'}'
let fragShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fragShader,fragCode);gl.compileShader(fragShader);let shaderProgram=gl.createProgram();gl.attachShader(shaderProgram,vertShader);gl.attachShader(shaderProgram,fragShader);gl.linkProgram(shaderProgram);gl.useProgram(shaderProgram);this.shaderProgram=shaderProgram
this.resolutionLocation=gl.getUniformLocation(shaderProgram,"resolution");window.addEventListener("resize",function(){this.resize()}.bind(this))
this.resize()
this.render()}
this.init()}
(function(global){var module=window.noise={};function Grad(x,y,z){this.x=x;this.y=y;this.z=z}
Grad.prototype.dot2=function(x,y){return this.x*x+this.y*y};Grad.prototype.dot3=function(x,y,z){return this.x*x+this.y*y+this.z*z};var grad3=[new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)];var p=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];var perm=new Array(512);var gradP=new Array(512);module.seed=function(seed){if(seed>0&&seed<1){seed*=65536}
seed=Math.floor(seed);if(seed<256){seed|=seed<<8}
for(var i=0;i<256;i++){var v;if(i&1){v=p[i]^(seed&255)}else{v=p[i]^((seed>>8)&255)}
perm[i]=perm[i+256]=v;gradP[i]=gradP[i+256]=grad3[v%12]}};module.seed(0);var F2=0.5*(Math.sqrt(3)-1);var G2=(3-Math.sqrt(3))/6;var F3=1/3;var G3=1/6;module.simplex2=function(xin,yin){var n0,n1,n2;var s=(xin+yin)*F2;var i=Math.floor(xin+s);var j=Math.floor(yin+s);var t=(i+j)*G2;var x0=xin-i+t;var y0=yin-j+t;var i1,j1;if(x0>y0){i1=1;j1=0}else{i1=0;j1=1}
var x1=x0-i1+G2;var y1=y0-j1+G2;var x2=x0-1+2*G2;var y2=y0-1+2*G2;i&=255;j&=255;var gi0=gradP[i+perm[j]];var gi1=gradP[i+i1+perm[j+j1]];var gi2=gradP[i+1+perm[j+1]];var t0=0.5-x0*x0-y0*y0;if(t0<0){n0=0}else{t0*=t0;n0=t0*t0*gi0.dot2(x0,y0)}
var t1=0.5-x1*x1-y1*y1;if(t1<0){n1=0}else{t1*=t1;n1=t1*t1*gi1.dot2(x1,y1)}
var t2=0.5-x2*x2-y2*y2;if(t2<0){n2=0}else{t2*=t2;n2=t2*t2*gi2.dot2(x2,y2)}
return 70*(n0+n1+n2)};module.simplex3=function(xin,yin,zin){var n0,n1,n2,n3;var s=(xin+yin+zin)*F3;var i=Math.floor(xin+s);var j=Math.floor(yin+s);var k=Math.floor(zin+s);var t=(i+j+k)*G3;var x0=xin-i+t;var y0=yin-j+t;var z0=zin-k+t;var i1,j1,k1;var i2,j2,k2;if(x0>=y0){if(y0>=z0){i1=1;j1=0;k1=0;i2=1;j2=1;k2=0}else if(x0>=z0){i1=1;j1=0;k1=0;i2=1;j2=0;k2=1}else{i1=0;j1=0;k1=1;i2=1;j2=0;k2=1}}else{if(y0<z0){i1=0;j1=0;k1=1;i2=0;j2=1;k2=1}else if(x0<z0){i1=0;j1=1;k1=0;i2=0;j2=1;k2=1}else{i1=0;j1=1;k1=0;i2=1;j2=1;k2=0}}
var x1=x0-i1+G3;var y1=y0-j1+G3;var z1=z0-k1+G3;var x2=x0-i2+2*G3;var y2=y0-j2+2*G3;var z2=z0-k2+2*G3;var x3=x0-1+3*G3;var y3=y0-1+3*G3;var z3=z0-1+3*G3;i&=255;j&=255;k&=255;var gi0=gradP[i+perm[j+perm[k]]];var gi1=gradP[i+i1+perm[j+j1+perm[k+k1]]];var gi2=gradP[i+i2+perm[j+j2+perm[k+k2]]];var gi3=gradP[i+1+perm[j+1+perm[k+1]]];var t0=0.6-x0*x0-y0*y0-z0*z0;if(t0<0){n0=0}else{t0*=t0;n0=t0*t0*gi0.dot3(x0,y0,z0)}
var t1=0.6-x1*x1-y1*y1-z1*z1;if(t1<0){n1=0}else{t1*=t1;n1=t1*t1*gi1.dot3(x1,y1,z1)}
var t2=0.6-x2*x2-y2*y2-z2*z2;if(t2<0){n2=0}else{t2*=t2;n2=t2*t2*gi2.dot3(x2,y2,z2)}
var t3=0.6-x3*x3-y3*y3-z3*z3;if(t3<0){n3=0}else{t3*=t3;n3=t3*t3*gi3.dot3(x3,y3,z3)}
return 32*(n0+n1+n2+n3)};function fade(t){return t*t*t*(t*(t*6-15)+10)}
function lerp(a,b,t){return(1-t)*a+t*b}
module.perlin2=function(x,y){var X=Math.floor(x),Y=Math.floor(y);x=x-X;y=y-Y;X=X&255;Y=Y&255;var n00=gradP[X+perm[Y]].dot2(x,y);var n01=gradP[X+perm[Y+1]].dot2(x,y-1);var n10=gradP[X+1+perm[Y]].dot2(x-1,y);var n11=gradP[X+1+perm[Y+1]].dot2(x-1,y-1);var u=fade(x);return lerp(lerp(n00,n10,u),lerp(n01,n11,u),fade(y))};module.perlin3=function(x,y,z){var X=Math.floor(x),Y=Math.floor(y),Z=Math.floor(z);x=x-X;y=y-Y;z=z-Z;X=X&255;Y=Y&255;Z=Z&255;var n000=gradP[X+perm[Y+perm[Z]]].dot3(x,y,z);var n001=gradP[X+perm[Y+perm[Z+1]]].dot3(x,y,z-1);var n010=gradP[X+perm[Y+1+perm[Z]]].dot3(x,y-1,z);var n011=gradP[X+perm[Y+1+perm[Z+1]]].dot3(x,y-1,z-1);var n100=gradP[X+1+perm[Y+perm[Z]]].dot3(x-1,y,z);var n101=gradP[X+1+perm[Y+perm[Z+1]]].dot3(x-1,y,z-1);var n110=gradP[X+1+perm[Y+1+perm[Z]]].dot3(x-1,y-1,z);var n111=gradP[X+1+perm[Y+1+perm[Z+1]]].dot3(x-1,y-1,z-1);var u=fade(x);var v=fade(y);var w=fade(z);return lerp(lerp(lerp(n000,n100,u),lerp(n001,n101,u),w),lerp(lerp(n010,n110,u),lerp(n011,n111,u),w),v)}})(this)